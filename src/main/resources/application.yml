application:
  name: utsjekk
server:
  servlet:
    context-path: /
spring:
  main:
    allow-bean-definition-overriding: true
  flyway:
    enabled: true
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      connection-test-query: "select 1"
      max-lifetime: 30000
      minimum-idle: 1
  application:
    name: utsjekk
  jackson:
    mapper:
      accept-case-insensitive-properties: true
    deserialization:
      accept-single-value-as-array: true
      fail-on-unknown-properties: true
    serialization:
      write-empty-json-arrays: false
      fail-on-empty-beans: false
logging:
  config: "classpath:logback-spring.xml"

springdoc:
  packagesToScan: no.nav.utsjekk
  pathsToMatch: /v3/api-docs,/api/**
  swagger-ui:
    disable-swagger-default-url: true

no.nav.security.jwt:
  issuer:
    azuread:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}
  client:
    registration:
      utsjekk-oppdrag:
        resource-url: ${UTSJEKK_OPPDRAG_API_URL}
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${UTSJEKK_OPPDRAG_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      utsjekk-simulering-cc:
        resource-url: ${UTSJEKK_SIMULERING_API_URL}
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${UTSJEKK_SIMULERING_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      utsjekk-simulering-obo:
        resource-url: ${UTSJEKK_SIMULERING_API_URL}
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: ${UTSJEKK_SIMULERING_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic

management:
  endpoint.health.show-details: always
  endpoints.web:
    exposure.include: info, health, metrics, prometheus, mappings
    base-path: "/internal"
    path-mapping:
      info: "isAlive"

funksjonsbrytere:
  enabled: true
  unleash:
    uri: ${UNLEASH_SERVER_API_URL}
    apiKey: ${UNLEASH_SERVER_API_TOKEN}
    environment: ${NAIS_CLUSTER_NAME}
    applicationName: ${NAIS_APP_NAME}

UTSJEKK_OPPDRAG_API_URL: http://utsjekk-oppdrag
UTSJEKK_OPPDRAG_SCOPE: api://${NAIS_CLUSTER_NAME}.helved.utsjekk-oppdrag/.default
UTSJEKK_SIMULERING_API_URL: http://utsjekk-simulering
UTSJEKK_SIMULERING_SCOPE: api://${NAIS_CLUSTER_NAME}.helved.utsjekk-simulering/.default

prosessering:
  continuousRunning.enabled: true
  fixedDelayString:
    in:
      milliseconds: 10000
  delete:
    after:
      weeks: 16

PROSESSERING_GRUPPE: ${PROSESSERING_GRUPPE}
PROSESSERING_ROLLE: ${PROSESSERING_ROLLE}

konsumenter:
  tiltakspenger:
    fagsystem: TILTAKSPENGER
    apper: tiltakspenger-vedtak
  tilleggsstønader:
    fagsystem: TILLEGGSSTØNADER
    apper: tilleggsstonader-sak
  dagpenger:
    fagsystem: DAGPENGER
    apper: utsjekk

kafka:
  config:
    topic: "helved.iverksetting-status-v1"
  brokers: ${KAFKA_BROKERS}
  truststorePath: ${KAFKA_TRUSTSTORE_PATH}
  keystorePath: ${KAFKA_KEYSTORE_PATH}
  credstorePassword: ${KAFKA_CREDSTORE_PASSWORD}